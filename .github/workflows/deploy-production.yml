name: PSN Rwanda Frontend CI/CD

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - '.gitignore'
      - '.gitattributes'
      - 'LICENSE'
      - '.github/workflows/README.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - '.gitignore'
      - '.gitattributes'
      - 'LICENSE'
      - '.github/workflows/README.md'
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: kevlargroup/psn-rwanda-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          # Remove package-lock.json to force resolution of latest compatible dependencies
          rm -f package-lock.json
          # Install dependencies with a regular install (not ci) to allow resolution of packages
          npm install
          # Clean up any caniuse-lite issues
          npx browserslist@latest --update-db

      - name: Build application
        run: npm run build
        env:
          REACT_APP_API_URL: http://203.161.62.61:4040/api/v1

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Build and push Frontend Service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: "22"
          script: |
            cd /opt/psn_rwanda/frontend
            git pull origin main
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d --force-recreate
            docker image prune -f 